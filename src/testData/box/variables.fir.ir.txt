FILE fqName:<root> fileName:/variables.kt
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:result type:kotlin.String [val]
        CONST String type=kotlin.String value="ac"
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        WHEN type=kotlin.String origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'val result: kotlin.String declared in <root>.box' type=kotlin.String origin=null
              arg1: CONST String type=kotlin.String value="ac"
            then: CONST String type=kotlin.String value="OK"
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="Fail: "
              GET_VAR 'val result: kotlin.String declared in <root>.box' type=kotlin.String origin=null
  FUN name:evalVariables visibility:public modality:FINAL <> (flag:kotlin.Boolean) returnType:kotlin.String
    VALUE_PARAMETER name:flag index:0 type:kotlin.Boolean
    BLOCK_BODY
      VAR name:s type:kotlin.String [var]
        CONST String type=kotlin.String value="a"
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: GET_VAR 'flag: kotlin.Boolean declared in <root>.evalVariables' type=kotlin.Boolean origin=null
          then: BLOCK type=kotlin.Unit origin=null
            SET_VAR 'var s: kotlin.String declared in <root>.evalVariables' type=kotlin.Unit origin=PLUSEQ
              CALL 'public final fun plus (other: kotlin.Any?): kotlin.String declared in kotlin.String' type=kotlin.String origin=PLUSEQ
                $this: GET_VAR 'var s: kotlin.String declared in <root>.evalVariables' type=kotlin.String origin=PLUSEQ
                other: CONST String type=kotlin.String value="b"
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: BLOCK type=kotlin.Unit origin=null
            SET_VAR 'var s: kotlin.String declared in <root>.evalVariables' type=kotlin.Unit origin=PLUSEQ
              CALL 'public final fun plus (other: kotlin.Any?): kotlin.String declared in kotlin.String' type=kotlin.String origin=PLUSEQ
                $this: GET_VAR 'var s: kotlin.String declared in <root>.evalVariables' type=kotlin.String origin=PLUSEQ
                other: CONST String type=kotlin.String value="c"
      RETURN type=kotlin.Nothing from='public final fun evalVariables (flag: kotlin.Boolean): kotlin.String declared in <root>'
        GET_VAR 'var s: kotlin.String declared in <root>.evalVariables' type=kotlin.String origin=null
